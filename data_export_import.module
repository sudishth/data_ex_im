<?php
  // $Id$

  /**
   * @file
   * This is the main file for the data_export_import module.  It will have several clearly defined sections
   * and will be extended by plugins or include files.
   *
   * The sections are:
   * Help 
   * Permissions
   * hook_menu
   * calbacks
   * forms 
   * submit
   * validation
   */

  /**
   * Display help and module information
   * @param path which path of the site we're displaying help
   * @param arg array that holds the current path as would be returned from arg() function
   * @return help text for the path
   */
function data_export_import_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
  case "admin/help#data_export_import":
    $output = '<p>'.  t("Exports datasets as files which can then imported into other Drupal instances.") .'</p>';
    break;
  }
  return $output;
  } // function onthisdate_help

/**
 * Implementation of hook_perm().
 */
function data_export_import_perm() {
  return array('access data export import');
}


/**
 * This is the hook_menu section.
 *
 * Defines all pages and tabs.
 */
function data_export_import_menu() {

  $items = array();

  $items['admin/content/data_export_import'] = array(
                                                     'title' => t('Data export import'),
						     'page callback' => 'data_export_import_callback_export',
                                                     'access arguments' => array('access data export import'),
                                                     'description' => t('Data export import'),
                                                     'type' => MENU_NORMAL_ITEM,
                                                     );

  // This 'tab' inherits from MENU_NORMAL_ITEM
  $items['admin/content/data_export_import/export'] = array(
                                                            'title' => 'Export',
                                                            //'description' => 'Export a dataset.',
                                                            //'page callback' => 'data_export_import_callback',
                                                            // 'page arguments' => array('', 'backup_migrate_ui_manual_backup_quick', TRUE),
                                                            //'access arguments' => array('access content'),
                                                            'weight' => 0,
                                                            'type' => MENU_DEFAULT_LOCAL_TASK,
                                                            );

  $items['admin/content/data_export_import/import'] = array(
                                                            'title' => 'Import',
                                                            //'description' => 'Import a dataset',
                                                            'page callback' => 'data_export_import_callback_import',
                                                            // 'page arguments' => array('', 'backup_migrate_ui_manual_restore', TRUE),
                                                            'access arguments' => array('access data export import'),
                                                            'weight' => 1,
                                                            'type' => MENU_LOCAL_TASK,
                                                            );

  $items['admin/content/data_export_import/destination'] = array(
                                                                 'title' => 'Destinations',
                                                                 //'description' => 'Set where datasets are stored',
                                                                 'page callback' => 'data_export_import_callback_destination',
                                                                 // 'page arguments' => array('', 'backup_migrate_ui_manual_restore', TRUE),
                                                                 'access arguments' => array('access data export import'),
                                                                 'weight' => 2,
                                                                 'type' => MENU_LOCAL_TASK,
                                                                 );

  $items['admin/content/data_export_import/profile'] = array(
                                                             'title' => 'Profiles',
                                                             //'description' => 'Dataset profiles',
                                                             'page callback' => 'data_export_import_callback_profile',
                                                             // 'page arguments' => array('', 'backup_migrate_ui_manual_restore', TRUE),
                                                             'access arguments' => array('access data export import'),
                                                             'weight' => 3,
                                                             'type' => MENU_LOCAL_TASK,
                                                             );

  $items['admin/content/data_export_import/schedule'] = array(
                                                              'title' => 'Schedules',
                                                              //'description' => 'Scheduled exports and imports',
                                                              'page callback' => 'data_export_import_callback_schedule',
                                                              // 'page arguments' => array('', 'backup_migrate_ui_manual_restore', TRUE),
                                                              'access arguments' => array('access data export import'),
                                                              'weight' => 4,
                                                              'type' => MENU_LOCAL_TASK,
                                                              );

  return $items;
}

/**
 * These are the callback functions.
 *
 * These are all called from each of the pages/tabs defined in hook_menu().
 */

// This function gets called in the browser address bar for: 
//"http://yourhost/data_export_import" or 
//"http://yourhost/?q=data_export_import". It will generate// a page with //this form on it.
function data_export_import_callback_export() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  return drupal_get_form('data_export_import_export_form');
}

function data_export_import_callback_import() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  ////return drupal_get_form('data_export_import_main_form');

  ////return "Import button goes here.";

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  return drupal_get_form('data_export_import_import_form');
}

function data_export_import_callback_destination() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  ////return drupal_get_form('data_export_import_main_form');
  return "Destination list here.";
}

function data_export_import_callback_profile() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  ////return drupal_get_form('data_export_import_main_form');
  return "Profile lists here.";
}

function data_export_import_callback_schedule() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form. 
  ////return drupal_get_form('data_export_import_main_form');
  return "Schedule list here.";
}

/**
 * This is where the forms are defined.
 *
 * These are usually called from the callbackfunctions to create a required form.
 */
function data_export_import_export_form($form_state) {

  $debug = FALSE;

  if ($debug) {
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }
  //  $period = drupal_map_assoc(array(3600, 10800, 21600, 32400, 43200, 86400, 172800, 259200, 604800, 1209600, 2419200, 4838400, 9676800), 'format_interval');
  $period = array('Programmes', 'Stations', 'People', 'Primary subject', 'Event', 'Genres', 'Locations');

  
  $form['taxonomy_terms'] = array(
                                  '#type' => 'fieldset',
                                  '#title' => t('Taxonomy terms'),
                                  '#collapsible' => TRUE,
                                  '#collapsed' => FALSE,
                                  );

  /*

$form['taxonomy_terms']['timer'] = array(
'#type' => 'select',
  '#title' => t('Select vocabulary'),
    '#default_value' => variable_get('timer', 259200),
    '#options' => $period,
    '#description' => t('The timer.'),
    );

*/

$form['taxonomy_terms']['taxonomy_terms'] = array(
						  '#type' => 'checkbox',
						  '#title' => t('Export all taxonomy terms'),
						  );

/*
$form['content_types'] = array(
			       '#type' => 'fieldset',
			       '#title' => t('Content types'),
			       '#collapsible' => TRUE,
			       '#collapsed' => FALSE,
			       );

$form['content_types']['content_types'] = array(
						'#type' => 'checkbox',
						'#title' => t('Export all content types'),
						);

$form['nodes'] = array(
		       '#type' => 'fieldset',
		       '#title' => t('Nodes'),
		       '#collapsible' => TRUE,
		       '#collapsed' => FALSE,
		       );

$form['nodes']['all'] = array(
			      '#type' => 'checkbox',
			      '#title' => t('All'),
			      );

$form['nodes']['article'] = array(
				  '#type' => 'checkbox',
				  '#title' => t('Article'),
				  );

$form['nodes']['competition'] = array(
				      '#type' => 'checkbox',
				      '#title' => t('Competition'),
				      );

$form['nodes']['event'] = array(
				'#type' => 'checkbox',
				'#title' => t('Event'),
				);

$form['nodes']['facebook_feed'] = array(
					'#type' => 'checkbox',
					'#title' => t('Facebook feed'),
					);

$form['nodes']['feed'] = array(
			       '#type' => 'checkbox',
			       '#title' => t('Feed'),
			       );

$form['nodes']['checkbox'] = array(
				   '#type' => 'checkbox',
				   '#title' => t('Intro article'),
				   );

$form['nodes']['message'] = array(
				  '#type' => 'checkbox',
				  '#title' => t('Message'),
				  );

$form['users'] = array(
		       '#type' => 'fieldset',
		       '#title' => t('Users'),
		       '#collapsible' => TRUE,
		       '#collapsed' => FALSE,
		       );

$form['users']['users'] = array(
				'#type' => 'checkbox',
				'#title' => t('Export all users'),
				);
  
$form['comments'] = array(
			  '#type' => 'fieldset',
			  '#title' => t('Comments'),
			  '#collapsible' => TRUE,
			  '#collapsed' => FALSE,
			  );

$form['comments']['comments'] = array(
				      '#type' => 'checkbox',
				      '#title' => t('Export all node comments'),
				      );

$form['example_textfield'] = array(
				   '#type' => 'textfield',
				   '#title' => t('Example Textfield'),
				   '#default_value' => 'some text',
				   );
*/
$form['submit'] = array(
			'#type' => 'submit',
			'#value' => 'Create dataset files',
			);

if ($debug) {
  echo "<pre>";
  echo "form\n";
  var_export($form);
  echo "</pre>";
 }

return $form;
}

function data_export_import_import_form($form_state) {

  $debug = FALSE;
  $form = array();
  
  //$form['#attributes']['enctype'] = 'multipart/form-data';
  //$form['file_upload'] = array('#title' => t('Upload file'), '#type'  => 'file');
  //$form['submit_upload'] = array('#type'  =>  'submit', '#value'  =>  'Submit');

  // Get the contents of the dataset directory and create a list of
  // links which can be used to trigger the data import.

  $directory = drupal_get_path('module', 'data_export_import') . '/includes';
  $directory = "sites/default/files/data_export_import";
  $mask = '.dataset';
  $files = file_scan_directory($directory, $mask);



  // $files = file_scan_directory('/home/kbailey2/projects/radiov2/web/trunk/sites/default/files/data_export_import', '*');

  if ($debug) {
    echo "<pre>";
    echo "files:\n";
    var_export($files);
    echo "</pre>";
  }

  //  $options = array();  
  foreach ($files as $file) {
  /*
    $form[$file->basename] = array(
				   '#type' => 'checkbox',
				   '#title' => "$file->basename",
				   '#default_menu' => "$file->basename",
				   );
*/
    $options[$file->basename] = $file->basename;

}

/*
$form['options'] = array(
'#type' => 'radios',
'#title' => t('Please select file to import'),
'#options' => array(t('Optional'), t('Required'));
*/


//$options = array('qqq' => t('Optional'), 'www' => t('Required'));

    $form['options'] = array(

      '#type' => 'radios', 

      '#title' => t('Please select file to import'), 

      '#options' => $options,

    );




  /*
   $form['file1'] = array(
   '#type' => 'checkbox',
  '#title' => t('file1'),
    );
*/
/*
 $form['file2'] = array(
 '#type' => 'checkbox',
'#title' => t('file2'),
  );
*/
$form['submit'] = array(
			'#type' => 'submit',
			'#value' => 'Import dataset files',
			);

return $form;
}

/**
 * These are the submit functions.
 *
 * These are called by the submit functions on each page/tab.
 */

// This is the main function called on the data export form.
function data_export_import_export_form_submit($form, &$form_state) {

  require_once 'includes/taxonomy_terms.inc';
  
  $debug = FALSE;
  
  if ($debug) {
    echo "form\n";
    echo "<pre>";
    var_export($form);
    echo "</pre>";
  }

  if ($debug) {
    echo "form_state \n";
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }
  
  // Case if Taxonomy terms has been selected.
  if ($form_state['values']['taxonomy_terms'] == 1) {

    $dataset_file = data_export_import_export_taxonomy_terms();
    drupal_set_message("The Taxonomy terms dataset was output to the file: ".$dataset_file);
  }
}

function data_export_import_import_form_submit($form, &$form_state) {

  require_once 'includes/taxonomy_terms.inc';

  $debug = FALSE;
  /*
  $validators = array();
  $dest = 'upload_directory';
  $file = file_save_upload('file_upload', $validators, $dest);
  //$file will be 0 if the upload doesn't exist, or the $dest directory
  //isn't writable
  if ($file != 0) {
    $dest_path = 'upload_directory/file';
    $result = file_copy($file, $dest_path, FILE_EXISTS_RENAME);
    if ($result == 1) {
      //Success, $file object will contain a different (renamed)
      //filename and filepath if the destination existed
    }
    else {
      //Failure
    }
  }
  else {
    form_set_error('myform', t("Failed to save the file."));
  }
  */

  if ($debug) {
    echo "form\n";
    echo "<pre>";
    var_export($form);
    echo "</pre>";
  }

  if ($debug) {
    echo "form_state \n";
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }



    $result = data_export_import_import_taxonomy_terms( file  );


   drupal_set_message("File(s) imported".$form_state['clicked_button']['#post']['options']);

}


/**
 * These are the validation functions.
 *
 * These will be called when the forms are being validated.
 */

// This adds a handler/function to validate the data entered into the 
// "year of birth" field to make sure it's between the values of 1900 
// and 2000. If not, it displays an error. The value report is // $form_state['values'] (see http&#58;//drupal.org/node/144132#form-state).
//
// Notice the name of the function. It is simply the name of the form 
// followed by '_validate'. This is the default validation function.
function data_export_import_main_form_validate($form, &$form_state) {

  // Currently not used.
  $placeholder = 1;
  /*
   $year_of_birth = $form_state['values']['year_of_birth'];
   if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
   form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
   }
  */
}
