<?php

  /**
   * @file
   * This module can export and import datasets.
   *
   * It will have several clearly defined sections and will be
   * extended by  plugins or include files.
   *
   * The sections are:
   * Help
   * Permissions
   * hook_menu
   * calbacks
   * forms
   * submit
   * validation
   */

  /**
   * Display help and module information
   * @param
   *   Path which path of the site we're displaying help.
   * @param
   *   Arg array that holds the current path as would be returned from arg() function.
   * @return
   *   Help text for the path.
   */
function data_export_import_help($path, $arg) {

  $output = '';

  switch ($path) {
  case "admin/help#data_export_import":
    $output = '<p>'.  t("Exports datasets as files which can then imported into other Drupal instances.") .'</p>';
    break;
  }
  return $output;
  }

/**
 * Implementation of hook_perm().
 */
function data_export_import_perm() {
  return array('access data export import');
}

/**
 * This is the hook_menu section.
 *
 * Defines all pages and tabs.
 */
function data_export_import_menu() {

  $items = array();

  $items['admin/content/data_export_import'] = array('title' => 'Data export import',
                                                     'page callback' => 'data_export_import_callback_export',
                                                     'access arguments' => array('access data export import'),
                                                     'description' => 'Data export import',
                                                     'type' => MENU_NORMAL_ITEM);

  // This 'tab' inherits from MENU_NORMAL_ITEM
  $items['admin/content/data_export_import/export'] = array('title' => 'Export',
                                                            'weight' => 0,
                                                            'type' => MENU_DEFAULT_LOCAL_TASK);

  $items['admin/content/data_export_import/import'] = array('title' => 'Import',
                                                            'page callback' => 'data_export_import_callback_import',
                                                            'access arguments' => array('access data export import'),
                                                            'weight' => 1,
                                                            'type' => MENU_LOCAL_TASK);

  $items['admin/content/data_export_import/destination'] = array('title' => 'Destinations',
                                                                 'page callback' => 'data_export_import_callback_destination',
                                                                 'access arguments' => array('access data export import'),
                                                                 'weight' => 2,
                                                                 'type' => MENU_LOCAL_TASK);

  $items['admin/content/data_export_import/profile'] = array('title' => 'Profiles',
                                                             'page callback' => 'data_export_import_callback_profile',
                                                             'access arguments' => array('access data export import'),
                                                             'weight' => 3,
                                                             'type' => MENU_LOCAL_TASK);

  $items['admin/content/data_export_import/schedule'] = array('title' => 'Schedules',
                                                              'page callback' => 'data_export_import_callback_schedule',
                                                              'access arguments' => array('access data export import'),
                                                              'weight' => 4,
                                                              'type' => MENU_LOCAL_TASK);
  return $items;
}

/**
 * Callback function for exporting datasets.
 *
 * @return
 *   Form to enable the user to select datasets for exporting.
 */
function data_export_import_callback_export() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form.
  return drupal_get_form('data_export_import_export_form');
}

/**
 * Callback function for importing datasets.
 *
 * @return
 *   Form to enable the user to select datasets for importing.
 */
function data_export_import_callback_import() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form.
  return drupal_get_form('data_export_import_import_form');
}

/**
 * Callback function for managing the dataset file locations.
 *
 * @return
 *   Form for managing dataset file locations.
 */
function data_export_import_callback_destination() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form.
  return "Destination list here.";
}

/**
 * Callback function for managing dataset profiles.
 *
 * @return
 *   Form for managing dataset profiles.
 */
function data_export_import_callback_profile() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form.
  return "Profile lists here.";
}

/**
 * Callback function for managing the scheduled exports and imports.
 *
 * @return
 *   Form for managing the scheduled exports and imports.
 */
function data_export_import_callback_schedule() {

  // This form calls the form builder function via the
  // drupal_get_form() function which takes the name of this form builder
  // function as an argument. It returns the results to display the form.
  return "Schedule list here.";
}

/**
 * Create form to enable users to be able to select datasets to export.
 *
 * @param $form_state
 *   The current values of the form elements.
 *
 * @return
 *   The form elements to enable the user to choose which datasets to export.
 */
function data_export_import_export_form($form_state) {

  $debug = FALSE;

  if ($debug) {
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }

  $form['taxonomy_terms'] = array('#type' => 'fieldset',
                                  '#title' => t('Taxonomy terms'),
                                  '#collapsible' => TRUE,
                                  '#collapsed' => FALSE);

  $form['taxonomy_terms']['taxonomy_terms'] = array('#type' => 'checkbox',
                                                    '#title' => 'Export all taxonomy terms');

  $form['submit'] = array('#type' => 'submit',
                          '#value' => 'Create dataset files');

  if ($debug) {
    echo "<pre>";
    echo "form\n";
    var_export($form);
    echo "</pre>";
  }

  return $form;
}

/**
 * Create form to enable users to be able to select datasets to import.
 *
 * @param $form_state
 *   The current values of the form elements.
 *
 * @return
 *   The form elements to enable the user to choose which datasets to export.
 */
function data_export_import_import_form($form_state) {

  $debug = FALSE;
  $form = array();

  // Get the contents of the dataset directory and create a list of
  // links which can be used to trigger the data import.
  $directory = drupal_get_path('module', 'data_export_import') . '/includes';
  $directory = "sites/default/files/data_export_import";
  $mask = '.dataset';
  $files = file_scan_directory($directory, $mask);

  if ($debug) {
    echo "<pre>";
    echo "files:\n";
    var_export($files);
    echo "</pre>";
  }

  foreach ($files as $file) {
    $options[$file->basename] = $file->basename;

  }

  $form['options'] = array('#type' => 'radios',
                           '#title' => t('Please select file to import'),
                           '#options' => $options);

  $form['submit'] = array('#type' => 'submit',
                          '#value' => 'Import dataset files');

  return $form;
}


/**
 * This is the main function called on the data export form.
 *
 * @param $form
 *   Form items.
 *
 * @param $form_state
 *   Values of form items.
 *
 * @return
 *   TRUE if all exports ran without error.
 */
function data_export_import_export_form_submit($form, &$form_state) {

  require_once 'includes/taxonomy_terms.inc';

  $debug = FALSE;

  if ($debug) {
    echo "form\n";
    echo "<pre>";
    var_export($form);
    echo "</pre>";
  }

  if ($debug) {
    echo "form_state \n";
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }

  // Case if Taxonomy terms has been selected.
  if ($form_state['values']['taxonomy_terms'] == 1) {

    $dataset_file = data_export_import_export_taxonomy_terms();
    drupal_set_message(check_plain("The Taxonomy terms dataset was output to the file: " . $dataset_file));
  }

  return TRUE;
}

/**
 * This is the main function called on the data import form.
 *
 * @param $form
 *   Form items.
 *
 * @param $form_state
 *   Values of form items.
 *
 * @return
 *   TRUE if all imports ran without error.
 */
function data_export_import_import_form_submit($form, &$form_state) {

  require_once 'includes/taxonomy_terms.inc';

  $debug = FALSE;

  if ($debug) {
    echo "form\n";
    echo "<pre>";
    var_export($form);
    echo "</pre>";
  }

  if ($debug) {
    echo "form_state \n";
    echo "<pre>";
    var_export($form_state);
    echo "</pre>";
  }

  if ($debug) {
    echo "<pre>";
    echo "File to import: " . $form_state['clicked_button']['#post']['options'] . "\n";
    echo "</pre>";
  }

  $result = data_export_import_import_taxonomy_terms($form_state['clicked_button']['#post']['options']);

  drupal_set_message(check_plain("File(s) imported" . $form_state['clicked_button']['#post']['options']));

}

/**
 * Validates the data input by the user when exporting datasets.
 *
 * @param $form
 *   Form items.
 *
 * @param $form_state
 *   Values of form items.
 *
 * @return
 *   TRUE if the validation tests did not find any errors.
 */
function data_export_import_export_form_validate($form, &$form_state) {

  // Currently not used.
  $placeholder = 1;

  // Example code.
  // $year_of_birth = $form_state['values']['year_of_birth'];
  // if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
  // form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
  // }
}
